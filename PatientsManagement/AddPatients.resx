<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>